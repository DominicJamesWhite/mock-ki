id: add-workload
name: Add Workload to Environment
description: Adds a new workload to a specified environment using the provided image tag.
on:
  path_call:
    inputs:
      app_id:
        type: string
        description: "Application ID where the workload will be added"
        required: true
      env_id:
        type: string
        description: "Environment ID where the workload will be added"
        required: true
      workload_id:
        type: string
        description: "ID for the new workload"
        required: true
      image_tag:
        type: string
        description: "Container image tag to use for the workload"
        required: true
      container_name:
        type: string
        description: "Name of the container (defaults to 'main')"
        required: false
      image_name:
        type: string
        description: "Base image name (without the tag)"
        required: false

timeout-minutes: 15

jobs:
  add-workload:
    name: Add Workload to Environment
    steps:
      - id: create-delta
        name: Create deployment delta
        uses: humanitec/create-delta
        with:
          app: ${{ inputs.app_id }}
          env: ${{ inputs.env_id }}
          name: "Add workload ${{ inputs.workload_id }}"

      - id: prepare-image
        name: Prepare full image reference
        uses: humanitec/script
        with:
          script: |
            # If image_name is provided, use it, otherwise assume workload_id is the image name
            if [[ -n "${{ inputs.image_name }}" ]]; then
              IMAGE="${{ inputs.image_name }}:${{ inputs.image_tag }}"
            else
              IMAGE="${{ inputs.workload_id }}:${{ inputs.image_tag }}"
            fi
            echo "::set-output name=full_image::${IMAGE}"

      - id: prepare-container
        name: Get container name
        uses: humanitec/script
        with:
          script: |
            # If container_name is provided, use it, otherwise use 'main'
            if [[ -n "${{ inputs.container_name }}" ]]; then
              CONTAINER="${{ inputs.container_name }}"
            else
              CONTAINER="main"
            fi
            echo "::set-output name=container_name::${CONTAINER}"

      - id: update-delta
        name: Update delta with workload
        uses: humanitec/update-delta
        with:
          app: ${{ inputs.app_id }}
          delta_id: ${{ steps.create-delta.outputs.delta_id }}
          operations: |
            - op: add
              path: /modules/${{ inputs.workload_id }}
              value:
                type: workload
                metadata:
                  id: ${{ inputs.workload_id }}
                  name: ${{ inputs.workload_id }}
                spec:
                  containers:
                    ${{ steps.prepare-container.outputs.container_name }}:
                      image: ${{ steps.prepare-image.outputs.full_image }}
                      resources:
                        limits:
                          cpu: 100m
                          memory: 128Mi
                        requests:
                          cpu: 50m
                          memory: 64Mi

      - id: deploy-delta
        name: Deploy the workload
        uses: humanitec/deploy-delta
        with:
          app: ${{ inputs.app_id }}
          env: ${{ inputs.env_id }}
          delta_id: ${{ steps.create-delta.outputs.delta_id }}
          message: "Added workload ${{ inputs.workload_id }} with image ${{ steps.prepare-image.outputs.full_image }}"

    outputs:
      deployment_id: ${{ steps.deploy-delta.outputs.deployment_id }}
      delta_id: ${{ steps.create-delta.outputs.delta_id }}
