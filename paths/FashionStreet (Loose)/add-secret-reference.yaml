id: add-secret-reference
name: Add Secret Reference to Application
description: Adds a secret reference to an application using a Hashicorp Vault secret store.
on:
  path_call:
    inputs:
      app_id:
        type: string
        description: "Application ID where the secret will be added"
        required: true
      secret_key:
        type: string
        description: "Key name for the secret reference"
        required: true
      secret_path:
        type: string
        description: "Path to the secret in Vault (e.g. 'secrets/data/myapp/api-key')"
        required: true
      secret_store:
        type: string
        description: "ID of the Vault secret store to use"
        required: true
      description:
        type: string
        description: "Description of what this secret is used for"
        required: false

timeout-minutes: 10

jobs:
  add-secret-ref:
    name: Add Secret Reference
    steps:
      - id: validate-secret-store
        name: Validate Secret Store Exists
        uses: humanitec/cli-action
        with:
          command: api get /orgs/HUMANITEC_ORG/secretstores/${inputs.secret_store} -o json

      - id: check-store-result
        name: Check Secret Store Result
        uses: humanitec/javascript-action
        with:
          script: |
            try {
              const result = JSON.parse(process.env.STORE_RESULT || '{}');
              if (!result.id) {
                core.setFailed(`Secret store '${inputs.secret_store}' not found`);
                return false;
              }
              return true;
            } catch (e) {
              core.setFailed(`Error checking secret store: ${e.message}`);
              return false;
            }
        env:
          STORE_RESULT: ${{ steps.validate-secret-store.outputs.stdout }}

      - id: create-secret-ref
        name: Create Secret Reference
        uses: humanitec/cli-action
        with:
          command: |
            create value ${inputs.secret_key} "${inputs.secret_path}" \
              --app ${inputs.app_id} \
              ${{ inputs.env_id ? '--env ' + inputs.env_id : '' }} \
              --description "${{ inputs.description || 'Secret reference created by automation' }}" \
              --is-secret-ref \
              --secret-store ${inputs.secret_store}

    outputs:
      secret_key: ${{ inputs.secret_key }}
      env_id: ${{ inputs.env_id || '' }}
